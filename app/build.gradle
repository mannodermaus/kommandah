apply plugin: "com.android.application"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "de.mannodermaus.android-junit5"

final def keystoreFile = rootProject.file("kommandah.keystore")

android {
  compileSdkVersion COMPILE_SDK_VERSION
  buildToolsVersion BUILD_TOOLS_VERSION

  defaultConfig {
    applicationId "de.mannodermaus.kommandah"
    minSdkVersion MIN_SDK_VERSION
    targetSdkVersion TARGET_SDK_VERSION
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    vectorDrawables.useSupportLibrary true
  }

  buildTypes.debug {
    applicationIdSuffix ".debug"
  }

  // Configure Release Signing
  def props = new Properties()
  rootProject.file("local.properties").withReader { props.load(it) }

  if (keystoreFile.exists()) {
    signingConfigs {
      release {
        storeFile rootProject.file(keystoreFile)
        storePassword props.getProperty("KEYSTORE_PASSWORD", "")
        keyAlias props.getProperty("KEY_ALIAS", "")
        keyPassword props.getProperty("KEY_PASSWORD", "")
      }
    }

    buildTypes.release {
      signingConfig signingConfigs.release
    }
  } else {
    variantFilter {
      it.setIgnore(it.buildType.name == "release")
    }
  }

  sourceSets {
    // Add Room Database schemas for migration tests
    androidTest.assets.srcDir "$projectDir/schemas"
  }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
  kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

configurations.all {
  resolutionStrategy.eachDependency { DependencyResolveDetails details ->
    if (details.requested.group == "com.android.support") {
      // "All support libraries must use the same version",
      // yet not all can be automatically updated through transitive dependencies.
      details.useVersion SUPPORT_LIBRARY_VERSION
    }
  }
}

kapt {
  arguments {
    arg("room.schemaLocation", "$projectDir/schemas")
  }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$KOTLIN_VERSION"
  implementation "org.jetbrains.kotlin:kotlin-reflect:$KOTLIN_VERSION"
  implementation "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
  implementation "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
  implementation "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
  implementation "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
  implementation "com.android.support.constraint:constraint-layout:$CONSTRAINT_LAYOUT_VERSION"
  implementation "android.arch.lifecycle:extensions:$ARCHITECTURE_COMPONENTS_VERSION"
  implementation "android.arch.lifecycle:reactivestreams:$ARCHITECTURE_COMPONENTS_VERSION"
  implementation "com.afollestad.material-dialogs:core:$MATERIAL_DIALOGS_VERSION"

  implementation "io.reactivex.rxjava2:rxjava:$RXJAVA_VERSION"
  implementation "io.reactivex.rxjava2:rxkotlin:$RXKOTLIN_VERSION"
  implementation "io.reactivex.rxjava2:rxandroid:$RXANDROID_VERSION"
  implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$RXBINDING_VERSION"
  implementation "com.jakewharton.threetenabp:threetenabp:$THREETEN_ANDROID_VERSION"
  implementation "com.jakewharton.timber:timber:$TIMBER_VERSION"
  implementation "io.michaelrocks:bimap:$BIMAP_VERSION"

  implementation "com.google.dagger:dagger-android:$DAGGER_VERSION"
  implementation "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
  implementation "android.arch.persistence.room:runtime:$ARCHITECTURE_COMPONENTS_VERSION"
  implementation "android.arch.persistence.room:rxjava2:$ARCHITECTURE_COMPONENTS_VERSION"
  kapt "android.arch.persistence.room:compiler:$ARCHITECTURE_COMPONENTS_VERSION"
  kapt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
  kapt "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"

  testImplementation junit5()
  testImplementation junit5Params()
  testCompileOnly junit5EmbeddedRuntime()
  testImplementation "org.threeten:threetenbp:$THREETEN_JAVA_VERSION"
  testImplementation "org.assertj:assertj-core:$ASSERTJ_VERSION"
  testImplementation "android.arch.core:core-testing:$ARCHITECTURE_COMPONENTS_VERSION"
  testImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"
  kaptTest "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

  androidTestImplementation "com.android.support.test:runner:$SUPPORT_TEST_VERSION"
  androidTestImplementation "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
  androidTestImplementation "android.arch.persistence.room:testing:$ARCHITECTURE_COMPONENTS_VERSION"
}
